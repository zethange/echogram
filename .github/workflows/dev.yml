name: Deploy dev
on:
  push:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Build and push docker image
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '23'
          cache: 'gradle'
      - uses: gradle/actions/setup-gradle@v3
      - run: ./gradlew build --no-daemon -x test
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            latest

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy on server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: copy files to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST_ADDRESS }}
          username: ${{ secrets.HOST_USERNAME }}
          password: ${{ secrets.HOST_PASSWORD }}
          source: "./"
          target: "/root/echo"
      - name: run docker-compose
        uses: appleboy/ssh-action@v1.1.0
        env:
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: echogram
        with:
          envs: DB_DATABASE,DB_USERNAME,DB_PASSWORD
          host: ${{ secrets.HOST_ADDRESS }}
          username: ${{ secrets.HOST_USERNAME }}
          password: ${{ secrets.HOST_PASSWORD }}
          script: |
            cd /root/echo
            docker compose pull
            docker compose up -d
            docker system prune -a -f